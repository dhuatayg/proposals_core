<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns:servicing="http://bbva.com/arq-spring-servicing"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
        http://bbva.com/arq-spring-servicing
        http://bbva.com/arq-spring-servicing/servicing.xsd">

    <!-- Declaracion de modulo de servicios -->
    <servicing:module-metadata application-name="pzic" service-logical-id="proposals"
                               routines="validator,data-processing-executor"/>

    <servicing:test-metadata local-configuration-filesystem-root="src/test/resources/lc"
                             smc-logical-id="test" smc-registry-id="test"/>

    <context:component-scan base-package="com.bbva.pzic.products.proposals.business,com.bbva.pzic.products.proposals.dao,com.bbva.pzic.products.proposals.facade,com.bbva.pzic.products.proposals.util">
        <context:exclude-filter expression=".*_Roo_.*" type="regex"/>
        <context:exclude-filter expression="com\.bbva\.pzic\.[^.]*\.dao\.model\.[^.]*\.Transaccion.*" type="regex"/>
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <jaxrs:server address="/${sa:logicalId}">
        <jaxrs:serviceBeans>
            <ref bean="srvInsurancesV0Features"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <bean id="restConnectorBasic" class="com.bbva.pzic.insurances.v0.features.util.connection.fake.RestConnectorBasicFake"/>

    <bean id="contextProvider" class="com.bbva.jee.arq.spring.core.servicing.context.ContextProviderImpl">
        <property name="invocationContext">
            <bean class="com.bbva.jee.arq.spring.core.servicing.context.InvocationContext">
                <property name="httpServletRequestHeaders">
                    <map>
                        <!-- USUARIOse:AAP -->
                        <entry key="tsec" value="RU5URUxHWTAxOjEzMDAwMDAw"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Con este bean evitamos el error producido en el método post-init de la clase
    com.bbva.jee.arq.spring.core.managers.impl.CatalogManagerImpl, ya que requiere el atributo
    pathInfo para definir que catálogo usar (ASO o API-nuevo) -->
    <bean class="org.springframework.mock.web.MockHttpServletRequest" primary="true">
        <property name="pathInfo" value="any/v1/any"/>
    </bean>

    <bean class="com.bbva.jee.arq.spring.core.task.TimeoutTaskManager"/>

    <bean name="deploymentManager" class="com.bbva.jee.arq.spring.core.servicing.deployment.DeploymentManagerImpl"/>

    <!-- Cambiamos el ámbito del proxy a clases, en lugar de interfaces -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>
